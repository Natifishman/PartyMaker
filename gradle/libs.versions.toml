# libs.versions.toml â€“ Centralized dependency and plugin version management

[versions]
# --- Core Versions ---
agp = "8.9.3"
kotlin = "2.0.21"
glide = "4.15.1"
compiler = "4.15.1"
concurrentFutures = "1.3.0"
firebaseAdmin = "9.1.1"
gson = "2.13.1"

# --- AndroidX ---
coreKtx = "1.16.0"
activityCompose = "1.10.1"
appcompat = "1.7.1"
cardview = "1.0.0"
constraintlayout = "2.2.1"
lifecycleRuntimeKtx = "2.9.2"
lifecycleViewmodelKtx = "2.9.2"

# --- Compose ---
composeBom = "2025.07.00"

# --- Material ---
material = "1.12.0"

# --- Firebase & Google ---
firebaseBom = "34.0.0"
firebaseFirestore = "26.0.0"
playServicesAuthVersion = "21.3.0"
playServicesLocation = "21.3.0"
playServicesMaps = "19.2.0"
roomVersion = "2.7.2"
secretsGradlePlugin = "2.0.1"
places = "4.4.1"

# --- OpenAI & Networking ---
openaiClient = "4.0.1"
ktorClientAndroid = "3.2.2"
okhttp = "5.1.0"

# --- JSON ---
json = "20250517"

# --- Media ---
picasso = "2.71828"
circleimageview = "3.1.0"

# --- Testing ---
preference = "1.2.1"
junitKtx = "1.2.1"

[libraries]
# --- AndroidX Core ---
androidx-concurrent-futures = { module = "androidx.concurrent:concurrent-futures", version.ref = "concurrentFutures" }
androidx-core-ktx = { group = "androidx.core", name = "core-ktx", version.ref = "coreKtx" }
androidx-activity-compose = { group = "androidx.activity", name = "activity-compose", version.ref = "activityCompose" }
androidx-appcompat = { group = "androidx.appcompat", name = "appcompat", version.ref = "appcompat" }
androidx-cardview = { group = "androidx.cardview", name = "cardview", version.ref = "cardview" }
androidx-constraintlayout = { group = "androidx.constraintlayout", name = "constraintlayout", version.ref = "constraintlayout" }
androidx-lifecycle-runtime-ktx = { group = "androidx.lifecycle", name = "lifecycle-runtime-ktx", version.ref = "lifecycleRuntimeKtx" }
androidx-lifecycle-viewmodel-ktx = { module = "androidx.lifecycle:lifecycle-viewmodel-ktx", version.ref = "lifecycleViewmodelKtx" }
androidx-lifecycle-viewmodel-savedstate = { module = "androidx.lifecycle:lifecycle-viewmodel-savedstate", version.ref = "lifecycleViewmodelKtx" }
androidx-lifecycle-livedata-ktx = { module = "androidx.lifecycle:lifecycle-livedata-ktx", version.ref = "lifecycleViewmodelKtx" }

# --- Compose ---
androidx-compose-bom = { group = "androidx.compose", name = "compose-bom", version.ref = "composeBom" }
androidx-ui = { group = "androidx.compose.ui", name = "ui" }
androidx-ui-graphics = { group = "androidx.compose.ui", name = "ui-graphics" }
androidx-ui-tooling-preview = { group = "androidx.compose.ui", name = "ui-tooling-preview" }
androidx-material3 = { group = "androidx.compose.material3", name = "material3" }
material = { group = "com.google.android.material", name = "material", version.ref = "material" }

# --- Firebase & Google Play ---
firebase-bom = { module = "com.google.firebase:firebase-bom", version.ref = "firebaseBom" }
firebase-firestore = { group = "com.google.firebase", name = "firebase-firestore", version.ref = "firebaseFirestore" }
firebase-analytics = { module = "com.google.firebase:firebase-analytics" }
google-firebase-auth = { module = "com.google.firebase:firebase-auth" }
google-firebase-database = { module = "com.google.firebase:firebase-database" }
google-firebase-storage = { module = "com.google.firebase:firebase-storage" }
gms-play-services-auth = { module = "com.google.android.gms:play-services-auth", version.ref = "playServicesAuthVersion" }
play-services-location = { module = "com.google.android.gms:play-services-location", version.ref = "playServicesLocation" }
play-services-maps = { module = "com.google.android.gms:play-services-maps", version.ref = "playServicesMaps" }
places = { module = "com.google.android.libraries.places:places", version.ref = "places" }

# --- Room ---
androidx-room-compiler = { module = "androidx.room:room-compiler", version.ref = "roomVersion" }
androidx-room-runtime = { module = "androidx.room:room-runtime", version.ref = "roomVersion" }

# --- Media & UI ---
picasso = { module = "com.squareup.picasso:picasso", version.ref = "picasso" }
circleimageview = { module = "de.hdodenhof:circleimageview", version.ref = "circleimageview" }
glide = { module = "com.github.bumptech.glide:glide", version.ref = "glide" }
compiler = { module = "com.github.bumptech.glide:compiler", version.ref = "compiler" }

# --- Networking & APIs ---
openai-client = { module = "com.aallam.openai:openai-client", version.ref = "openaiClient" }
ktor-client-android = { module = "io.ktor:ktor-client-android", version.ref = "ktorClientAndroid" }
okhttp = { module = "com.squareup.okhttp3:okhttp", version.ref = "okhttp" }
json = { module = "org.json:json", version.ref = "json" }

# --- Google Secrets Plugin ---
secrets-gradle-plugin = { module = "com.google.android.libraries.mapsplatform.secrets-gradle-plugin:secrets-gradle-plugin", version.ref = "secretsGradlePlugin" }

# --- Firebase Admin ---
firebase-admin = { module = "com.google.firebase:firebase-admin", version.ref = "firebaseAdmin" }

# --- JSON & Tools ---
gson = { module = "com.google.code.gson:gson", version.ref = "gson" }

# --- Testing ---
androidx-preference = { group = "androidx.preference", name = "preference", version.ref = "preference" }
spring-boot-starter-test = { module = "org.springframework.boot:spring-boot-starter-test" }
spring-boot-starter-web = { module = "org.springframework.boot:spring-boot-starter-web" }
androidx-junit-ktx = { group = "androidx.test.ext", name = "junit-ktx", version.ref = "junitKtx" }

[plugins]
android-application = { id = "com.android.application", version.ref = "agp" }
kotlin-android = { id = "org.jetbrains.kotlin.android", version.ref = "kotlin" }
kotlin-compose = { id = "org.jetbrains.kotlin.plugin.compose", version.ref = "kotlin" }