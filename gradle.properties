# Project-wide Gradle settings.
# IDE (e.g. Android Studio) users:
# Gradle settings configured through the IDE *will override*
# any settings specified in this file.
# For more details on how to configure your build environment visit
# http://www.gradle.org/docs/current/userguide/build_environment.html

# ===== GRADLE BUILD PERFORMANCE OPTIMIZATION =====
# Specifies the JVM arguments used for the daemon process.
# Optimized for PartyMaker build performance
org.gradle.jvmargs=-Xmx6144m -Dfile.encoding=UTF-8 -XX:+HeapDumpOnOutOfMemoryError -XX:+UseParallelGC -XX:MaxMetaspaceSize=1024m

# Parallel builds for faster compilation
org.gradle.parallel=true

# Build cache for incremental builds
org.gradle.caching=true

# Configure on demand for faster builds
org.gradle.configureondemand=true

# Enable Gradle Daemon (keeps Gradle in memory)
org.gradle.daemon=true

# Configuration cache for faster subsequent builds
org.gradle.configuration-cache=true

# File system watching for better incremental builds
org.gradle.vfs.watch=true

# Increase timeout for Gradle operations
org.gradle.internal.http.connectionTimeout=120000
org.gradle.internal.http.socketTimeout=120000

# ===== ANDROID BUILD OPTIMIZATION =====
# AndroidX package structure to make it clearer which packages are bundled with the
# Android operating system, and which are packaged with your app's APK
# https://developer.android.com/topic/libraries/support-library/androidx-rn
android.useAndroidX=true

# Enable Jetifier for AndroidX compatibility
android.enableJetifier=true

# Enables namespacing of each library's R class so that its R class includes only the
# resources declared in the library itself and none from the library's dependencies,
# thereby reducing the size of the R class for that library
android.nonTransitiveRClass=true

# Enable R8 full mode for better optimization
android.enableR8.fullMode=true

# BuildConfig and ResValues generation (controlled per module)
# android.enableBuildConfig=false
# android.enableResValues=false

# Android build cache (deprecated - use Gradle build cache instead)
# android.enableBuildCache=true

# Experimental resource caching (may not be supported in newer AGP)
# android.experimental.cacheCompileLibResources=true

# AAPT2 JNI optimization (removed in newer AGP versions)
# android.enableAapt2jni=true

# IDE optimization flag
android.injected.invoked.from.ide=false

# ===== KOTLIN OPTIMIZATION =====
# Kotlin code style for this project: "official" or "obsolete":
kotlin.code.style=official

# Enable incremental compilation for Kotlin (kapt)
kapt.incremental.apt=true

# Use worker API for parallel annotation processing
kapt.use.worker.api=true

# Don't include compile classpath in kapt (faster builds)
kapt.include.compile.classpath=false